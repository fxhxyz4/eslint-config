export default {
  root: true,
  parser: "@typescript-eslint/parser",
  parserOptions: {
    project: "./tsconfig.json",
    ecmaVersion: "latest",
    sourceType: "module",
  },
  plugins: ["@typescript-eslint", "eslint-plugin-prettier", "eslint-plugin-html", "eslint-plugin-import", "eslint-plugin-jsx-a11y"],
  ignorePatterns: [
    "dist",
    "build",
    "web_modules",
    ".vuepress/dist",
    "node_modules",
    "jspm_packages",
    ".vscode",
    ".idea",
    ".github",
    ".turbo",
    ".svelte-kit",
    ".angular",
    ".next",
    ".nuxt",
    "*.config.ts",
    "*.config.js",
    ".eslintrc.*",
    ".prettierrc.js",
    ".prettierrc.cjs",
    ".prettierrc.mjs",
  ],
  extends: [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
  ],
  overrides: [
    {
      // node ts
      files: ["**/*.ts", "**/*.cts", "**/*.mts"],
      excludedFiles: [
        "web/**",
        "www/**",
        "client/**",
        "front/**",
        "frontend/**",
        "site/**",
      ],
      env: { node: true },
      languageOptions: {
        globals: {
          __filename: "writable",
          __dirname: "writable",
          process: "readonly",
          global: "readonly",
          module: "readonly",
        },
      },
      rules: {
        "@typescript-eslint/restrict-plus-operands": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-unsafe-argument": "off",
        "@typescript-eslint/no-misused-promises": "off",
        "@typescript-eslint/consistent-type-imports": "error",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/indent": ["warn", 2],
        "no-console": "warn",
        "no-unused-vars": "error",
        eqeqeq: "error",
        "no-var": "error",
        "prefer-const": "warn",
        semi: ["error", "always"],
        quotes: ["error", "double"],
        indent: ["warn", 2],
        "no-mixed-spaces-and-tabs": "error",
        "space-before-function-paren": ["warn", "always"],
        "brace-style": ["error", "1tbs"],
        camelcase: "warn",
        "no-else-return": "warn",
        "consistent-return": "off",
        "no-undef": "warn",
        "no-empty": "error",
        "no-debugger": "warn",
        "no-duplicate-imports": "error",
        "no-restricted-globals": "off",
      },
    },
    {
      // node js
      files: ["**/*.js", "**/*.mjs", "**/*.cjs"],
      excludedFiles: [
        "web/**",
        "www/**",
        "client/**",
        "front/**",
        "frontend/**",
        "site/**",
      ],
      env: { node: true },
      languageOptions: {
        globals: {
          __filename: "writable",
          __dirname: "writable",
          process: "readonly",
          global: "readonly",
          module: "readonly",
        },
      },
      linterOptions: {
        noInlineConfig: true,
      },
      rules: {
        "no-console": "warn",
        "no-unused-vars": "error",
        eqeqeq: "error",
        "no-var": "error",
        "prefer-const": "warn",
        semi: ["error", "always"],
        quotes: ["error", "double"],
        indent: ["warn", 2],
        "no-mixed-spaces-and-tabs": "error",
        "space-before-function-paren": ["warn", "always"],
        "brace-style": ["error", "1tbs"],
        camelcase: "warn",
        "no-else-return": "warn",
        "consistent-return": "off",
        "no-undef": "warn",
        "no-empty": "error",
        "no-debugger": "warn",
        "no-duplicate-imports": "error",
        "no-restricted-globals": "off",
      },
    },
    {
      // web ts
      files: [
        "web/**/*.ts",
        "www/**/*.ts",
        "client/**/*.ts",
        "front/**/*.ts",
        "frontend/**/*.ts",
        "site/**/*.ts",
      ],
      env: { browser: true },
      languageOptions: {
        globals: {
          window: "readonly",
          document: "readonly",
          fetch: "readonly",
          localStorage: "readonly",
          sessionStorage: "readonly",
        },
      },
      rules: {
        "@typescript-eslint/restrict-plus-operands": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-unsafe-argument": "off",
        "@typescript-eslint/no-misused-promises": "off",
        "@typescript-eslint/consistent-type-imports": "error",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/indent": ["warn", 2],
        "no-alert": "error",
        "no-unused-vars": "error",
        eqeqeq: "error",
        "no-var": "error",
        "prefer-const": "warn",
        semi: ["error", "always"],
        quotes: ["error", "double"],
        indent: ["warn", 2],
        "no-mixed-spaces-and-tabs": "error",
        "space-before-function-paren": ["warn", "always"],
        "brace-style": ["error", "1tbs"],
        camelcase: "warn",
        "no-else-return": "warn",
        "consistent-return": "off",
        "no-undef": "warn",
        "no-empty": "error",
        "no-debugger": "warn",
        "no-duplicate-imports": "error",
        "no-console": "warn",
      },
    },
    {
      // web js
      files: [
        "web/**/*.js",
        "www/**/*.js",
        "client/**/*.js",
        "front/**/*.js",
        "frontend/**/*.js",
        "site/**/*.js",
      ],
      env: { browser: true },
      languageOptions: {
        globals: {
          window: "readonly",
          document: "readonly",
          fetch: "readonly",
          localStorage: "readonly",
          sessionStorage: "readonly",
        },
      },
      rules: {
        "no-alert": "error",
        "no-unused-vars": "error",
        eqeqeq: "error",
        "no-var": "error",
        "prefer-const": "warn",
        semi: ["error", "always"],
        quotes: ["error", "double"],
        indent: ["warn", 2],
        "no-mixed-spaces-and-tabs": "error",
        "space-before-function-paren": ["warn", "always"],
        "brace-style": ["error", "1tbs"],
        camelcase: "warn",
        "no-else-return": "warn",
        "consistent-return": "off",
        "no-undef": "warn",
        "no-empty": "error",
        "no-debugger": "warn",
        "no-duplicate-imports": "error",
        "no-console": "warn",
      },
    },
  ],
};
